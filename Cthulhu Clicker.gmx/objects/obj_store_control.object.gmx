<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scroll draw calculations
//~DC
scroll_corner_width = sprite_get_width(spr_scroll_Rtop) *obj_control.zoom;
scroll_corner_height = sprite_get_height(spr_scroll_Rtop)*obj_control.zoom;
scroll_section_length = ceil((view_wview-2*scroll_corner_width)/(16*obj_control.zoom))
//randomizes the scrolls roll section tiles.
for(var i = 0; i&lt; scroll_section_length; i++)
{
scroll_section_frame[i] = irandom(5);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create item list
//~DC
//scroll SETUP-------------------------------------------------
image_xscale = view_wview/sprite_get_width(spr_control);
image_yscale = (view_hview/2)/sprite_get_height(spr_control);
store_scroll = 0;
drag = 0;
dragoverwrite = 0;
//--------------------------------------------------------------

scr_item_list(); //initilise item list
scr_load(); //check is save exists if so load it

//create item instnaces ----------------------------------------
//create icon --------------------------------------------------
for(var i=0; i &lt; ds_grid_height(store); i++)
{
item = instance_create(view_wview + scroll_corner_width -8*obj_control.zoom, obj_control.display_center + scroll_corner_height + (2+32*i)*obj_control.zoom,obj_item) 
    with item
    {
    sprite_index = obj_store_control.store[# 1,i];
    parent = i;
    image_xscale = obj_control.zoom;
    image_yscale = obj_control.zoom;       
        if obj_store_control.store[# 2,parent] = 0
            {
                image_blend = c_dkgray;
            }
        else
            {
                image_blend = c_white;
            }
    }
//create button --------------------------------------------------
with instance_create(2*view_wview - (33+20)*obj_control.zoom,obj_control.display_center + scroll_corner_height + (5+32*i)*obj_control.zoom,obj_upgrade_button) 
    {
    item = other.item
    image_xscale = obj_control.zoom;
    image_yscale = obj_control.zoom;
    parent = i;
    }
}
//-----------------------------------------------------------------
//updates price and DPs
scr_item_update(); 
//saves the store height into a variable
scroll_height = -ds_grid_height(store)*32*obj_control.zoom + obj_control.display_center - 2*scroll_corner_height + 8*obj_control.zoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//after this alarm activates, dragoverwrite is set to 1, meaning buttons wont work anymore
//~DC
dragoverwrite = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///store scrolling
//~DC
if drag = 1 //checks if mouse is being dragged
{
//displaces the store items by the change of mouse_y from the y coordinate where the moust was clicked
store_scroll += mouse_y - dragy;
dragy = mouse_y;
if store_scroll &gt; 0 {store_scroll = 0;}
else if store_scroll &lt; scroll_height
{store_scroll = scroll_height;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end store scrolling
//~DC
drag = 0;
dragoverwrite = 0;
alarm[0] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//~DC
alarm[0] = 10;
drag = 1;
dragy = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw_scroll
//~DC
//rolls -------------------------------------
for(var i = 0; i&lt; scroll_section_length; i++)
{
    draw_sprite_ext(spr_scroll_top,scroll_section_frame[i],view_wview+scroll_corner_width+(16*i*obj_control.zoom),obj_control.display_center,obj_control.zoom,obj_control.zoom,0,c_white,1);
    draw_sprite_ext(spr_scroll_bot,scroll_section_frame[i],view_wview+scroll_corner_width+(16*i*obj_control.zoom),view_hview - scroll_corner_height,obj_control.zoom,obj_control.zoom,0,c_white,1);
}

//corners -----------------------------------
draw_sprite_ext(spr_scroll_Ltop,0,view_wview,obj_control.display_center,obj_control.zoom,obj_control.zoom,0,c_white,1);
draw_sprite_ext(spr_scroll_Lbot,0,view_wview,view_hview - scroll_corner_height,obj_control.zoom,obj_control.zoom,0,c_white,1);
draw_sprite_ext(spr_scroll_Rtop,0,2*view_wview-scroll_corner_width,obj_control.display_center,obj_control.zoom,obj_control.zoom,0,c_white,1);
draw_sprite_ext(spr_scroll_Rbot,0,2*view_wview-scroll_corner_width,view_hview - scroll_corner_height,obj_control.zoom,obj_control.zoom,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
