<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resolution Management

//change these
var screen_width = 620;
var screen_height = 840;
window_set_position(0, 24);

/*  DONT CHANGE    */
surface_resize(application_surface,screen_width,screen_height); //resizes the surface to the resolution
window_set_size(screen_width,screen_height); //resizes the window to the resolution
view_wview = screen_width;  //resizes the view to the resolution
view_hview = screen_height;

/*  Useful Variables */
zoom = round((view_wview/sprite_get_width(obj_clicker))/4); //sets the zoom factor so that the button fits roughly 4 times in the room's width.
//DELETE create instances in porportion to the view
display_center = view_hview/2; //the y coordinate at which the botton of the city image starts
display_right = view_wview; //the y coordinate of window right side
clickerID = instance_create((view_wview/2) - (sprite_get_width(spr_clicker)/2)*zoom,view_hview*3/4 - (sprite_get_height(spr_clicker)/2)*zoom,obj_clicker);//creates the clicker object, 3/4 down and 1/2 across
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Variables
click_damage = 1;
DPS = 0;
population = 7000000000;
afflicted = 0;
insanity = 0;

//view
viewnum = 0;

//Draw Variables
bOffset = 10; //border offset for draw position calculations
tOffset = 4; //text border offset for text y buffer


//Calculation Variables - Save memory allocations each step by pre-allocating! - Harry
ui_population = "";
ui_afflicted = "";
ui_insanity = "";
ui_dps = "";
ui_entityWidth = 0;
ui_entityHeight = 0;

// play bg music ---------------
audio_play_sound(snd_placeholder_music, 10, true);
audio_sound_gain(snd_placeholder_music, 0.1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw background
/* due to how game maker layers sprites the background must be
drawn first */

// Draw sky -------------------
draw_sprite_ext( spr_sky, 0, 0, view_hview/2, 300, 300, 0, c_white, 1 );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the UI
/* Try to keep the draw elements in order from top to bottom, left to right of the screen :) - Harry */

/* Initialize the UI strings */
ui_insanity = "Insanity: " + string(insanity);
ui_population = "Population: " +string(population);
ui_afflicted = "Afflicted: " +string(afflicted);
ui_dps = "DPS: " +string(DPS);

/*Draw the UI Elements */
//Economy First ----------------------
ui_insanity = "Insanity: " + string(insanity);
draw_text(bOffset, bOffset,ui_insanity);

ui_entityHeight = string_height_ext(ui_insanity, tOffset, -1); //Get string width of population entity to properly accurately y position
draw_text(bOffset, bOffset + ui_entityHeight, ui_dps);

ui_entityWidth = string_width(ui_population); //Get string width in order to accurately x position
draw_text(display_right - bOffset - ui_entityWidth,bOffset, ui_population); //draw the population value

ui_entityWidth = string_width(ui_afflicted); //Get string width in order to accurately x position
ui_entityHeight = string_height_ext(ui_population, tOffset, -1); //Get string width of population entity to properly accurately y position
draw_text(display_right - bOffset - ui_entityWidth, bOffset + ui_entityHeight, ui_afflicted); //draw the afflicted value

//Lines Second ----------------------
draw_line(0,display_center,view_wview,display_center); //draws the line in the middle of the screen

// Cityscape ------------------------
draw_sprite_ext( spr_cityscape, 0, 0, view_hview/2, .5, .5, 0, c_white, 1 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewnum ++;
if viewnum &gt; 2 {viewnum = 2;}
scr_view();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewnum --;
if viewnum &lt; 0 {viewnum = 0;}
scr_view();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
