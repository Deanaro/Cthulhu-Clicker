<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resolution Management

//change these
var screen_width = 620;
var screen_height = 840;
window_set_position(0, 24);

/*  DONT CHANGE    */
surface_resize(application_surface,screen_width,screen_height); //resizes the surface to the resolution
window_set_size(screen_width,screen_height); //resizes the window to the resolution
view_wview = screen_width;  //resizes the view to the resolution
view_hview = screen_height;

/*  Useful Variables */
zoom = round(view_wview/(sprite_get_width(spr_clicker) * 4)); //sets the zoom factor so that the button fits roughly 4 times in the room's width.
//DELETE create instances in porportion to the view
display_center = view_hview/2; //the y coordinate at which the botton of the city image starts
display_right = view_wview; //the y coordinate of window right side
clickerID = instance_create((view_wview/2) - (sprite_get_width(spr_clicker)/2)*zoom,view_hview*3/4 - (sprite_get_height(spr_clicker)/2)*zoom,obj_clicker);//creates the clicker object, 3/4 down and 1/2 across

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT Game Variables
click_damage = 1;
DPS = 0;
population = 7000000000;
afflicted = 0;
insanity = 0;
global.DPS = 0;
image_speed = 7;
//View Variables
viewnum = 0;
index_minView = -1; //The lowest numbered View
index_maxView = 2; //The highest numbered View

/* View index numbers */
shop_view = 1;
menu_view = -1;

scr_viewupdate();

//Draw Variables
bOffset = 10; //border offset for draw position calculations
tOffset = 4; //text border offset for text y buffer
view_wmiddle = view_wview/2; //width middle
view_hmiddle = view_hview/2; //height middle
view_ui_middle = view_hmiddle + view_hmiddle/2; //verticle middle of UI area

//Calculation Variables - Save memory allocations each step by pre-allocating! - Harry
ui_population = "";
ui_afflicted = "";
ui_insanity = "";
ui_dps = "";
ui_entityWidth = 0;
ui_entityHeight = 0;

//HUD draw precalcs
view_count = abs(index_minView) + abs(index_maxView) + 1; //add together negative, zero and positive indexed views
dot_plus_offset_width = sprite_get_width(spr_dot) + bOffset;
all_dots_width = (view_count*dot_plus_offset_width-bOffset);
dots_pos_start = (view_wview-all_dots_width)/2;
//Arrows
ui_arrow_width = sprite_get_width(spr_arrow);
ui_arrow_height = sprite_get_height(spr_arrow);
ui_arrow_right_xpos = view_wview - ui_arrow_width - bOffset;
ui_arrow_left_xpos = bOffset;
ui_arrow_ypos = view_hmiddle + (ui_arrow_height/2);
ui_arrow_top = ui_arrow_ypos-(ui_arrow_height/2);
ui_arrow_bottom = ui_arrow_ypos+(ui_arrow_height/2);

// play bg music ---------------
audio_play_sound(snd_placeholder_music, 10, true);
audio_sound_gain(snd_placeholder_music, 0.1, 0);

//DPS cycle
alarm[0] = 1;

//font test
fnt_test = font_add_sprite_ext(spr_fonttest,"0123456789",false,0);
draw_set_font(fnt_test);
draw_set_color(c_white);
global.font_size = floor(zoom/4)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT Control Objects

//create store control object
instance_create(view_wview,y+view_hview/2,obj_store_control);
instance_create(0,0,obj_menu_control);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_load</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_save</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if DPS &lt;=60 and DPS &gt; 0
{
alarm[0] = round(60/DPS);
obj_control.insanity +=1;
obj_control.population -=1;
obj_control.afflicted +=1;
}
else
{
alarm[0] = 1;
obj_control.insanity +=ceil(DPS/60);
obj_control.population -=ceil(DPS/60);
obj_control.afflicted +=ceil(DPS/60);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check UI Arrows
if (obj_store_control.dragoverwrite = 0) //if not currently scrolling through store
{
    //Check inside verticle bounds
    if (mouse_y &gt; (ui_arrow_top) &amp;&amp; mouse_y &lt; (ui_arrow_bottom)) {
        //Check leftmost arrow
        if (mouse_x &gt; (view_xview + ui_arrow_left_xpos) &amp;&amp; mouse_x &lt; (view_xview + ui_arrow_left_xpos + ui_arrow_width))
        {
            scr_view_instant_left();
        }
        //Check Rightmost arrow
        else if (mouse_x &gt; (view_xview + ui_arrow_right_xpos) &amp;&amp; mouse_x &lt; (view_xview + ui_arrow_right_xpos + ui_arrow_width))
        {
            scr_view_instant_right();
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw background
/* due to how game maker layers sprites the background must be
drawn first */

// Draw sky -------------------
draw_sprite_ext( spr_sky, 0, 0, view_hview/2, 300, 300, 0, c_white, 1 );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the HUD
/* Try to keep the draw elements in order from top to bottom, left to right of the screen :) - Harry */

/* Calculate the HUD strings 
!!! Should be moved to step event instead of Draw*/
ui_insanity = "Insanity: " + string(insanity);
ui_population = "Population: " +string(population);
ui_afflicted = "Afflicted: " +string(afflicted);
ui_dps = "DPS: " +string(DPS);
viewoffset = view_wview * viewnum;

/*Draw the HUD Elements */
/*Economy ------------------------ 
Draw the economy HUD at the top of the screen*/
ui_entityWidth = string_width(ui_insanity) *global.font_size;
draw_text_transformed(bOffset + viewoffset, bOffset,ui_insanity,global.font_size,global.font_size,0);
draw_sprite(spr_flame_coin, image_index, ui_entityWidth + bOffset + viewoffset, bOffset+ ui_entityHeight/2);

ui_entityHeight = string_height_ext(ui_insanity, tOffset, -1)*global.font_size + zoom; //Get string width of population entity to properly accurately y position
draw_text_transformed(bOffset + viewoffset, bOffset + ui_entityHeight, ui_dps,global.font_size,global.font_size,0);

ui_entityWidth = string_width(ui_population) *global.font_size; //Get string width in order to accurately x position
draw_text_transformed(display_right - bOffset - ui_entityWidth + viewoffset,bOffset, ui_population,global.font_size,global.font_size,0); //draw the population value

ui_entityWidth = string_width(ui_afflicted) *global.font_size; //Get string width in order to accurately x position
ui_entityHeight = string_height_ext(ui_population, tOffset, -1) *global.font_size + zoom; //Get string width of population entity to properly accurately y position
draw_text_transformed(display_right - bOffset - ui_entityWidth + viewoffset, bOffset + ui_entityHeight, ui_afflicted,global.font_size,global.font_size,0); //draw the afflicted value

/* Cityscape ------------------------
Draw the cityscape 
!!! This needs to be moved to it's own script imo, the monsters/city is a big element and will need its own controller - Harry*/
draw_sprite_ext( spr_cityscape, 0, 0, view_hview/2, .5, .5, 0, c_white, 1 );

/* View Move Arrows ------------------------ 
Draw the view move arrows */
if (viewnum != index_minView) {
    draw_sprite(spr_arrow, 0, view_xview + ui_arrow_left_xpos, ui_arrow_ypos);
}
if (viewnum != index_maxView) {
    draw_sprite(spr_arrow, 1, view_xview + ui_arrow_right_xpos, ui_arrow_ypos);
}

/* View Dot Indicator ------------------------ 
Draw indicators of the views at the bottom of the screen */
draw_set_alpha(0.6);
for (i = 0; i &lt; view_count; i++) {
    if (i-abs(index_minView) = viewnum) {
        draw_sprite(spr_dot, 0, dots_pos_start + (i*dot_plus_offset_width) + view_xview, view_hview-38);
    } else {
        draw_sprite(spr_dot, 1, dots_pos_start + (i*dot_plus_offset_width) + view_xview, view_hview-38);
    }
}
draw_set_alpha(1); //return opactiy to default
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_view_instant_right</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_view_instant_left</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
